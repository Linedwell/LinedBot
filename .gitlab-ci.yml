---

stages:  # Defining main steps of the continous integration
  - check
  - deploy

pylint:
  stage: check
  image: linedwell/pylint:py2
  before_script:
    - pip install anybadge
    - mkdir public
  script:
    - ( pylint --output-format=colorized --disable C,R,import-error --reports=y ./*.py || pylint-exit $? ) | tee pylint.txt
    - score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
    - anybadge --value=$score --file=public/pylint.svg pylint
  artifacts:
    paths:
      - public/pylint.svg

linedbot:
  stage: deploy
  before_script:
    ## Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    #- mkdir -p ~/.ssh
    #- chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no $SSH_TOKEN_L "cd $BOTDIR_L &&
        git checkout master &&
        git fetch &&
        git checkout $CI_COMMIT_SHA"
  when: manual
...